二叉树的序列化(Serialize)是指：把一棵二叉树按照某种遍历方式的结果以某种格式保存为字符串，从而使得内存中建立起来的二叉树可以持久保存。序列化可以基于先序、中序、后序、层序的二叉树等遍历方式来进行修改，序列化的结果是一个字符串，序列化时通过 某种符号表示空节点（#）

二叉树的反序列化(Deserialize)是指：根据某种遍历顺序得到的序列化字符串结果str，重构二叉树。
char* Serialize(TreeNode *root) {
        string str;    
        Serialize(root,str);
        char*ch=new char[str.length()+1];
        // copy(str.begin(), str.end(), ch);
        strcpy(ch, str.c_str());
        ch[str.length()]='\0';
        return ch;
    }
    void Serialize(TreeNode *root,string&str) {    
        if(root==nullptr)
        {
            str+='#';
            return;
        }
        str+=to_string(root->val)+',';
        Serialize(root->left, str);
        Serialize(root->right, str);
        
    }
    TreeNode* Deserialize(char *str) {
        return Deserialize(&str);
    }
    TreeNode* Deserialize(char**str) {
        if(**str=='#')
        {
            (*str)++;
            return nullptr;
        }
        int val=0;
        while(**str!=','&&**str!='\0')
        {
            val=val*10+(**str-'0');
            (*str)++;
        }
        TreeNode*root=new TreeNode(val);
        if(**str=='\0')return root;
        else (*str)++;
        root->left=Deserialize(str);
        root->right=Deserialize(str);
        return root;
    }