ListNode* oddEvenList(ListNode* head) {
        // write code here
        if(head == nullptr)
            return nullptr;
        ListNode *odd = head;
        ListNode *even = head->next;
        ListNode *evenhead = even;
        while (even != nullptr && even->next != nullptr)
        {
            odd->next = even->next;
            even->next = even->next->next;
            odd = odd->next;
            even = even->next;
        }
        odd->next = evenhead;
        return head;
}
给定一个单链表，请设定一个函数，将链表的奇数位节点和偶数位节点分别放在一起，重排后输出。
注意是节点的编号而非节点的数值。
示例1
输入：
{1,2,3,4,5,6}
复制
返回值：
{1,3,5,2,4,6}
复制
说明：
1->2->3->4->5->6->NULL
重排后为
1->3->5->2->4->6->NULL